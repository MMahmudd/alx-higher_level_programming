# 3-say_my_name.txt


Using 3-say_my_name.py
======================

This_modules defination of a function ``say_my_name(first_name, last_name="")``.

Using
====

``say_my_name(...)`` prints "My name is Mahmud Mohammed".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Mahmud", "Mohammed")
    My name is Mahmud Mohammed

::

    >>> say_my_name("Mahmud", "Mohammed")
    My name is Mahmud Mohammed

The_parameter ```last_name``` is optional. If not last_name is  given,
an empty_string is required to  print instead.

::

    >>> say_my_name("Mahmud")
    My name is Mahmud

Invali_ Names
==============

The_parameters ``first_name`` and ``last_name``` must_be strings. else,
a TypeError is required to raise.

::

    >>> say_my_name(6, "Mahamud")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("LeBrn", ["Cav", "Laker", "Hea"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"LeBrn": 6, "Jame": 24}, 7.8)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one_name must be given.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
